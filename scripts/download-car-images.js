import fs from 'fs';
import path from 'path';
import https from 'https';
import { fileURLToPath } from 'url';
import { setTimeout } from 'timers/promises';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Pexels API Access Key (–ø–æ–ª—É—á–∏—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –Ω–∞ https://www.pexels.com/api/)
const PEXELS_API_KEY = 'U3jgnMy3OjrqWD7Rd553mqcEHKj5fpl1pSws8FZYsN8HMHry2wdjYVio';

// –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –¥–ª—è –ø–æ–∏—Å–∫–∞
const carList = [
  { brand: 'Ferrari', model: '488 Spider', searchQuery: 'Ferrari red sports car' },
  { brand: 'Lamborghini', model: 'Huracan', searchQuery: 'Lamborghini yellow supercar' },
  { brand: 'Rolls-Royce', model: 'Ghost', searchQuery: 'Rolls Royce luxury sedan' },
  { brand: 'Bentley', model: 'Continental GT', searchQuery: 'Bentley luxury coupe' },
  { brand: 'Mercedes-Benz', model: 'G63 AMG', searchQuery: 'Mercedes G-Class SUV' },
  { brand: 'Porsche', model: '911 Turbo S', searchQuery: 'Porsche 911 sports car' },
  { brand: 'BMW', model: 'X7 M50i', searchQuery: 'BMW X7 luxury SUV' },
  { brand: 'Audi', model: 'RS6 Avant', searchQuery: 'Audi RS6 wagon' },
  { brand: 'McLaren', model: '720S', searchQuery: 'McLaren orange supercar' },
  { brand: 'Land Rover', model: 'Range Rover Vogue', searchQuery: 'Range Rover luxury SUV' }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ Pexels API
async function searchCarImage(query) {
  return new Promise((resolve, reject) => {
    const url = `https://api.pexels.com/v1/search?query=${encodeURIComponent(query)}&per_page=1&orientation=landscape`;
    
    const options = {
      headers: {
        'Authorization': PEXELS_API_KEY
      }
    };
    
    https.get(url, options, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        try {
          const result = JSON.parse(data);
          if (result.photos && result.photos.length > 0) {
            resolve(result.photos[0].src.large);
          } else {
            reject(new Error(`No images found for query: ${query}`));
          }
        } catch (error) {
          reject(error);
        }
      });
    }).on('error', (error) => {
      reject(error);
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function downloadImage(url, filename) {
  return new Promise((resolve, reject) => {
    const file = fs.createWriteStream(filename);
    
    https.get(url, (response) => {
      response.pipe(file);
      
      file.on('finish', () => {
        file.close();
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${filename}`);
        resolve();
      });
      
      file.on('error', (error) => {
        fs.unlink(filename, () => {}); // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
        reject(error);
      });
    }).on('error', (error) => {
      reject(error);
    });
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
async function downloadAllCarImages() {
  try {
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const imagesDir = path.join(__dirname, '..', 'public', 'images');
    if (!fs.existsSync(imagesDir)) {
      fs.mkdirSync(imagesDir, { recursive: true });
    }

    console.log('üöó –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π...');
    
    const carsData = [];
    
    for (const car of carList) {
      try {
        console.log(`üîç –ò—â—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è ${car.brand} ${car.model}...`);
        
        // –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ Unsplash API
        const imageUrl = await searchCarImage(car.searchQuery);
        
        // –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        const filename = `${car.brand.toLowerCase().replace(/[^a-z0-9]/g, '-')}-${car.model.toLowerCase().replace(/[^a-z0-9]/g, '-')}.jpg`;
        const filepath = path.join(imagesDir, filename);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await downloadImage(imageUrl, filepath);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
        carsData.push({
          id: `${car.brand.toLowerCase()}-${car.model.toLowerCase().replace(/\s+/g, '-')}`,
          brand: car.brand,
          model: car.model,
          imagePath: `/images/${filename}`,
          type: getCarType(car.brand, car.model),
          color: getRandomColor(),
          pricePerDay: getRandomPrice(),
          features: getCarFeatures(car.brand, car.model)
        });
        
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await setTimeout(1000);
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${car.brand} ${car.model}:`, error.message);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        carsData.push({
          id: `${car.brand.toLowerCase()}-${car.model.toLowerCase().replace(/\s+/g, '-')}`,
          brand: car.brand,
          model: car.model,
          imagePath: '/images/placeholder-car.jpg',
          type: getCarType(car.brand, car.model),
          color: getRandomColor(),
          pricePerDay: getRandomPrice(),
          features: getCarFeatures(car.brand, car.model)
        });
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º JSON —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
    const dataDir = path.join(__dirname, '..', 'src', 'data');
    if (!fs.existsSync(dataDir)) {
      fs.mkdirSync(dataDir, { recursive: true });
    }
    
    const carsJsonPath = path.join(dataDir, 'cars.json');
    fs.writeFileSync(carsJsonPath, JSON.stringify(carsData, null, 2));
    
    console.log('‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
    console.log(`üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${carsJsonPath}`);
    console.log(`üìÅ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${imagesDir}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error);
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getCarType(brand, model) {
  const sportsCarBrands = ['Ferrari', 'Lamborghini', 'McLaren', 'Porsche'];
  const suvBrands = ['Mercedes-Benz', 'BMW', 'Land Rover'];
  
  if (sportsCarBrands.includes(brand)) return 'sports';
  if (suvBrands.includes(brand) && (model.includes('G63') || model.includes('X7') || model.includes('Range'))) return 'suv';
  return 'sedan';
}

function getRandomColor() {
  const colors = ['Black', 'White', 'Silver', 'Red', 'Blue', 'Gray', 'Yellow', 'Orange'];
  return colors[Math.floor(Math.random() * colors.length)];
}

function getRandomPrice() {
  return Math.floor(Math.random() * (2000 - 500 + 1)) + 500;
}

function getCarFeatures(brand, model) {
  const baseFeatures = ['GPS Navigation', 'Bluetooth', 'Air Conditioning', 'Leather Seats'];
  const luxuryFeatures = ['Massage Seats', 'Premium Sound System', 'Panoramic Roof', 'Adaptive Cruise Control'];
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –±—Ä–µ–Ω–¥–∞ –∏ –º–æ–¥–µ–ª–∏
  const specialFeatures = [];
  
  if (brand === 'Ferrari' || brand === 'Lamborghini' || brand === 'McLaren') {
    specialFeatures.push('Sport Mode', 'Carbon Fiber Interior');
  } else if (brand === 'Rolls-Royce' || brand === 'Bentley') {
    specialFeatures.push('Champagne Cooler', 'Starlight Headliner');
  } else if (model.includes('AMG') || model.includes('M50i') || model.includes('RS6')) {
    specialFeatures.push('Performance Package', 'Sport Exhaust');
  }
  
  return [...baseFeatures, ...luxuryFeatures.slice(0, 2), ...specialFeatures];
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –î–ª—è —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –∫–ª—é—á –æ—Ç Pexels');
console.log('üîó –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://www.pexels.com/api/ (–º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–∞!)');
console.log('üìù –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_PEXELS_API_KEY_HERE –Ω–∞ –≤–∞—à –∫–ª—é—á');
console.log('');

if (PEXELS_API_KEY === 'YOUR_PEXELS_API_KEY_HERE') {
  console.log('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à Pexels API –∫–ª—é—á –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PEXELS_API_KEY');
  process.exit(1);
} else {
  downloadAllCarImages();
}